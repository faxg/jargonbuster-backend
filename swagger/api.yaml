# Use editor under https://mermade.github.io/openapi-gui/#
openapi: 3.0.0
servers:
  - url: 'http://jargonbusterbackend.azurewebsites.net/api'
info:
  description: >-
    API for the JargonBuster challenge. Provides a set of APIs to use text
    summarization, medical text analytics and access to other cognitive
    services. 
  version: 1.0.0
  title: JargonBuster API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: ''
    url: 'https://github.com/faxg/jargonbuster-backend'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: Summarize
    description: 'Summarize text using LSA (Latent Semantic Analysis). '
  - name: Extract
    description: 'API to extract text from documents (like PDF, images)'
  - name: Analyze
    description: >-
      Cognitive analytics on texts. Wrapper around Azure Text Analytics for
      health (preview). 
  - name: Present
    description: >-
      Presentation related functions, e.g. find illustrations, configure Azure
      Immersive Reader 
paths:
  /summarize:
    get:
      summary: Summarizes a (short) text
      description: Summarize short text with default settings
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
          description: Input text to summarize
      operationId: app.get_summary
      responses:
        '200':
          description: 'Summarization successful '
          content:
            application/json:
              schema: {}
      tags:
        - Summarize
    post:
      summary: Summarizes a text
      description: >-
        Summarize text up to 1MB. You can configure the LSA backend with NLTK
        options.
      parameters:
        - name: language
          in: query
          required: false
          schema:
            type: string
          description: Specifies the language of the text (default is english)
      operationId: app.post_summary
      responses:
        '200':
          description: 'Summarization successful '
          content:
            application/json:
              schema: {}
      tags:
        - Summarize
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummaryRequest'
        description: SummaryRequest containing the text to summarize.
    summary: Summarize texts
    description: >-
      These functions will help summarizing longer texts into a shorter
      abstract.
       
  /extract:
    post:
      summary: Extracts text from documents
      description: >-
        Upload a document (PDF, Word, Image, ....) and extract the text from it.
        Does leverage some OCR and form analysis if needed.
      parameters: []
      operationId: app.post_extract
      responses:
        '200':
          description: Text extraction successfull
          content:
            application/json:
              schema: {}
      tags:
        - Extract
      requestBody:
        required: false
        content:
          application/json:
            schema: {}
        description: Document to extract the text from
    summary: Extract plain text from various documents
    description: >-
      Helps to extract plain text from (binary) documents like PDFs, MS word,
      images etc. Depending on the input document type, leverages different
      methods like OCR to extract text.
  /analyze:
    post:
      summary: Analyzes medical texts
      description: Response with detailed analytics of the uploaded text
      parameters: []
      operationId: app.post_analyze
      responses:
        '200':
          description: Text extraction successfull
          content:
            application/json:
              schema: {}
      tags:
        - Analyze
      requestBody:
        required: true
        content:
          'application/json':
            schema: {}
        description: 'Text to analyze. '
    summary: Analyze medical jargon text
    description: >-
      This uses Azure Text Analytics for Health to find concepts, terms etc. in
      medical literature 
  /getIRToken:
    get:
      summary: Gets a reader token for Azure Immersive Reader
      description: >-
        Clients need to request a valid token for embedding the Immersive Reader
        component. Use this to request one.
      parameters: []
      operationId: app.get_ir_token
      responses:
        '200':
          description: IR reader token acquired
          content:
            application/json:
              schema: {}
      tags:
        - Present
    summary: Presentation helpers
    description: >-
      Helper methods to support the frontend with presenting content in a web /
      mobile user interface.


components:
  schemas:
    SummaryRequest:
      type: object
      properties:
        text:
          type: string
    ExtractRequest:
      type: binary
    AnalysisRequest:
      type: object
      properties:
        text:
          type: string

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
  links: {}
  callbacks: {}
security: []